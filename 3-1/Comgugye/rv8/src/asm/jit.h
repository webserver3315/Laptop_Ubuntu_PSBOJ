//
//  jit.h
//
//  DANGER - This is machine generated code
//

#ifndef rv_jit_h
#define rv_jit_h

namespace riscv
{
	inst_t emit_lui(ireg5 rd, simm32 imm20);
	inst_t emit_auipc(ireg5 rd, offset32 oimm20);
	inst_t emit_jal(ireg5 rd, offset21 jimm20);
	inst_t emit_jalr(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_beq(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bne(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_blt(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bge(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bltu(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_bgeu(ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	inst_t emit_lb(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lh(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lw(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lbu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lhu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_sb(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_sh(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_sw(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_addi(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_slti(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_sltiu(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_xori(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_ori(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_andi(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_slli(ireg5 rd, ireg5 rs1, uimm7 shamt7);
	inst_t emit_srli(ireg5 rd, ireg5 rs1, uimm7 shamt7);
	inst_t emit_srai(ireg5 rd, ireg5 rs1, uimm7 shamt7);
	inst_t emit_add(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sub(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sll(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_slt(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sltu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_xor(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srl(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sra(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_or(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_and(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_fence(arg4 pred, arg4 succ);
	inst_t emit_fence_i();
	inst_t emit_lwu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_ld(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_sd(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_addiw(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_slliw(ireg5 rd, ireg5 rs1, uimm5 shamt5);
	inst_t emit_srliw(ireg5 rd, ireg5 rs1, uimm5 shamt5);
	inst_t emit_sraiw(ireg5 rd, ireg5 rs1, uimm5 shamt5);
	inst_t emit_addw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_subw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sllw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srlw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_sraw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_ldu(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_lq(ireg5 rd, ireg5 rs1, offset12 oimm12);
	inst_t emit_sq(ireg5 rs1, ireg5 rs2, offset12 simm12);
	inst_t emit_addid(ireg5 rd, ireg5 rs1, simm12 imm12);
	inst_t emit_sllid(ireg5 rd, ireg5 rs1, uimm6 shamt6);
	inst_t emit_srlid(ireg5 rd, ireg5 rs1, uimm6 shamt6);
	inst_t emit_sraid(ireg5 rd, ireg5 rs1, uimm6 shamt6);
	inst_t emit_addd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_subd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_slld(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srld(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_srad(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mul(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulh(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulhsu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulhu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_div(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_rem(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remu(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_mulw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divuw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remuw(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_muld(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_divud(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remd(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_remud(ireg5 rd, ireg5 rs1, ireg5 rs2);
	inst_t emit_lr_w(ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	inst_t emit_sc_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoswap_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoadd_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoxor_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoor_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoand_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomin_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomax_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amominu_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomaxu_w(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_lr_d(ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	inst_t emit_sc_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoswap_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoadd_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoxor_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoor_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoand_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomin_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomax_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amominu_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomaxu_d(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_lr_q(ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	inst_t emit_sc_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoswap_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoadd_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoxor_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoor_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amoand_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomin_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomax_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amominu_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_amomaxu_q(ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	inst_t emit_ecall();
	inst_t emit_ebreak();
	inst_t emit_uret();
	inst_t emit_sret();
	inst_t emit_hret();
	inst_t emit_mret();
	inst_t emit_dret();
	inst_t emit_sfence_vm(ireg5 rs1);
	inst_t emit_sfence_vma(ireg5 rs1, ireg5 rs2);
	inst_t emit_wfi();
	inst_t emit_csrrw(ireg5 rd, ireg5 rs1, uimm12 csr12);
	inst_t emit_csrrs(ireg5 rd, ireg5 rs1, uimm12 csr12);
	inst_t emit_csrrc(ireg5 rd, ireg5 rs1, uimm12 csr12);
	inst_t emit_csrrwi(ireg5 rd, uimm5 zimm, uimm12 csr12);
	inst_t emit_csrrsi(ireg5 rd, uimm5 zimm, uimm12 csr12);
	inst_t emit_csrrci(ireg5 rd, uimm5 zimm, uimm12 csr12);
	inst_t emit_flw(freg5 frd, ireg5 rs1, offset12 oimm12);
	inst_t emit_fsw(ireg5 rs1, freg5 frs2, offset12 simm12);
	inst_t emit_fmadd_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fmsub_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmsub_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmadd_s(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fadd_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsub_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fmul_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fdiv_s(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsgnj_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjn_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjx_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmin_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmax_s(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsqrt_s(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fle_s(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_flt_s(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_feq_s(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_w_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_wu_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_s_w(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_s_wu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fmv_x_s(ireg5 rd, freg5 frs1);
	inst_t emit_fclass_s(ireg5 rd, freg5 frs1);
	inst_t emit_fmv_s_x(freg5 frd, ireg5 rs1);
	inst_t emit_fcvt_l_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_lu_s(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_s_l(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_s_lu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fld(freg5 frd, ireg5 rs1, offset12 oimm12);
	inst_t emit_fsd(ireg5 rs1, freg5 frs2, offset12 simm12);
	inst_t emit_fmadd_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fmsub_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmsub_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmadd_d(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fadd_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsub_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fmul_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fdiv_d(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsgnj_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjn_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjx_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmin_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmax_d(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_s_d(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_d_s(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fsqrt_d(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fle_d(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_flt_d(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_feq_d(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_w_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_wu_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_d_w(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_d_wu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fclass_d(ireg5 rd, freg5 frs1);
	inst_t emit_fcvt_l_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_lu_d(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fmv_x_d(ireg5 rd, freg5 frs1);
	inst_t emit_fcvt_d_l(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_d_lu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fmv_d_x(freg5 frd, ireg5 rs1);
	inst_t emit_flq(freg5 frd, ireg5 rs1, offset12 oimm12);
	inst_t emit_fsq(ireg5 rs1, freg5 frs2, offset12 simm12);
	inst_t emit_fmadd_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fmsub_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmsub_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fnmadd_q(freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	inst_t emit_fadd_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsub_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fmul_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fdiv_q(freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	inst_t emit_fsgnj_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjn_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fsgnjx_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmin_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fmax_q(freg5 frd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_s_q(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_s(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_d_q(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_d(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fsqrt_q(freg5 frd, freg5 frs1, arg3 rm);
	inst_t emit_fle_q(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_flt_q(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_feq_q(ireg5 rd, freg5 frs1, freg5 frs2);
	inst_t emit_fcvt_w_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_wu_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_w(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_q_wu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fclass_q(ireg5 rd, freg5 frs1);
	inst_t emit_fcvt_l_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_lu_q(ireg5 rd, freg5 frs1, arg3 rm);
	inst_t emit_fcvt_q_l(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fcvt_q_lu(freg5 frd, ireg5 rs1, arg3 rm);
	inst_t emit_fmv_x_q(ireg5 rd, freg5 frs1);
	inst_t emit_fmv_q_x(freg5 frd, ireg5 rs1);

	bool asm_lui(assembler &as, ireg5 rd, simm32 imm20);
	bool asm_auipc(assembler &as, ireg5 rd, offset32 oimm20);
	bool asm_jal(assembler &as, ireg5 rd, offset21 jimm20);
	bool asm_jalr(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_beq(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bne(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_blt(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bge(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bltu(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_bgeu(assembler &as, ireg5 rs1, ireg5 rs2, offset13 sbimm12);
	bool asm_lb(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lh(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lw(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lbu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lhu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_sb(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_sh(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_sw(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_addi(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_slti(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_sltiu(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_xori(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_ori(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_andi(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_slli(assembler &as, ireg5 rd, ireg5 rs1, uimm7 shamt7);
	bool asm_srli(assembler &as, ireg5 rd, ireg5 rs1, uimm7 shamt7);
	bool asm_srai(assembler &as, ireg5 rd, ireg5 rs1, uimm7 shamt7);
	bool asm_add(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sub(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sll(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_slt(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sltu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_xor(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srl(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sra(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_or(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_and(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_fence(assembler &as, arg4 pred, arg4 succ);
	bool asm_fence_i(assembler &as);
	bool asm_lwu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_ld(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_sd(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_addiw(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_slliw(assembler &as, ireg5 rd, ireg5 rs1, uimm5 shamt5);
	bool asm_srliw(assembler &as, ireg5 rd, ireg5 rs1, uimm5 shamt5);
	bool asm_sraiw(assembler &as, ireg5 rd, ireg5 rs1, uimm5 shamt5);
	bool asm_addw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_subw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sllw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srlw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_sraw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_ldu(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_lq(assembler &as, ireg5 rd, ireg5 rs1, offset12 oimm12);
	bool asm_sq(assembler &as, ireg5 rs1, ireg5 rs2, offset12 simm12);
	bool asm_addid(assembler &as, ireg5 rd, ireg5 rs1, simm12 imm12);
	bool asm_sllid(assembler &as, ireg5 rd, ireg5 rs1, uimm6 shamt6);
	bool asm_srlid(assembler &as, ireg5 rd, ireg5 rs1, uimm6 shamt6);
	bool asm_sraid(assembler &as, ireg5 rd, ireg5 rs1, uimm6 shamt6);
	bool asm_addd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_subd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_slld(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srld(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_srad(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mul(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulh(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulhsu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulhu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_div(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_rem(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remu(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_mulw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divuw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remuw(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_muld(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_divud(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remd(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_remud(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2);
	bool asm_lr_w(assembler &as, ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	bool asm_sc_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoswap_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoadd_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoxor_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoor_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoand_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomin_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomax_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amominu_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomaxu_w(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_lr_d(assembler &as, ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	bool asm_sc_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoswap_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoadd_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoxor_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoor_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoand_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomin_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomax_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amominu_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomaxu_d(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_lr_q(assembler &as, ireg5 rd, ireg5 rs1, arg1 aq, arg1 rl);
	bool asm_sc_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoswap_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoadd_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoxor_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoor_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amoand_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomin_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomax_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amominu_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_amomaxu_q(assembler &as, ireg5 rd, ireg5 rs1, ireg5 rs2, arg1 aq, arg1 rl);
	bool asm_ecall(assembler &as);
	bool asm_ebreak(assembler &as);
	bool asm_uret(assembler &as);
	bool asm_sret(assembler &as);
	bool asm_hret(assembler &as);
	bool asm_mret(assembler &as);
	bool asm_dret(assembler &as);
	bool asm_sfence_vm(assembler &as, ireg5 rs1);
	bool asm_sfence_vma(assembler &as, ireg5 rs1, ireg5 rs2);
	bool asm_wfi(assembler &as);
	bool asm_csrrw(assembler &as, ireg5 rd, ireg5 rs1, uimm12 csr12);
	bool asm_csrrs(assembler &as, ireg5 rd, ireg5 rs1, uimm12 csr12);
	bool asm_csrrc(assembler &as, ireg5 rd, ireg5 rs1, uimm12 csr12);
	bool asm_csrrwi(assembler &as, ireg5 rd, uimm5 zimm, uimm12 csr12);
	bool asm_csrrsi(assembler &as, ireg5 rd, uimm5 zimm, uimm12 csr12);
	bool asm_csrrci(assembler &as, ireg5 rd, uimm5 zimm, uimm12 csr12);
	bool asm_flw(assembler &as, freg5 frd, ireg5 rs1, offset12 oimm12);
	bool asm_fsw(assembler &as, ireg5 rs1, freg5 frs2, offset12 simm12);
	bool asm_fmadd_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fmsub_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmsub_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmadd_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fadd_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsub_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fmul_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fdiv_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsgnj_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjn_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjx_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmin_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmax_s(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsqrt_s(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fle_s(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_flt_s(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_feq_s(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_w_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_wu_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_s_w(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_s_wu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fmv_x_s(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fclass_s(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fmv_s_x(assembler &as, freg5 frd, ireg5 rs1);
	bool asm_fcvt_l_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_lu_s(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_s_l(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_s_lu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fld(assembler &as, freg5 frd, ireg5 rs1, offset12 oimm12);
	bool asm_fsd(assembler &as, ireg5 rs1, freg5 frs2, offset12 simm12);
	bool asm_fmadd_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fmsub_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmsub_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmadd_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fadd_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsub_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fmul_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fdiv_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsgnj_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjn_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjx_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmin_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmax_d(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_s_d(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_d_s(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fsqrt_d(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fle_d(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_flt_d(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_feq_d(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_w_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_wu_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_d_w(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_d_wu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fclass_d(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fcvt_l_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_lu_d(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fmv_x_d(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fcvt_d_l(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_d_lu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fmv_d_x(assembler &as, freg5 frd, ireg5 rs1);
	bool asm_flq(assembler &as, freg5 frd, ireg5 rs1, offset12 oimm12);
	bool asm_fsq(assembler &as, ireg5 rs1, freg5 frs2, offset12 simm12);
	bool asm_fmadd_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fmsub_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmsub_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fnmadd_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, freg5 frs3, arg3 rm);
	bool asm_fadd_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsub_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fmul_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fdiv_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2, arg3 rm);
	bool asm_fsgnj_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjn_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fsgnjx_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmin_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fmax_q(assembler &as, freg5 frd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_s_q(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_s(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_d_q(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_d(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fsqrt_q(assembler &as, freg5 frd, freg5 frs1, arg3 rm);
	bool asm_fle_q(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_flt_q(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_feq_q(assembler &as, ireg5 rd, freg5 frs1, freg5 frs2);
	bool asm_fcvt_w_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_wu_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_w(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_q_wu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fclass_q(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fcvt_l_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_lu_q(assembler &as, ireg5 rd, freg5 frs1, arg3 rm);
	bool asm_fcvt_q_l(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fcvt_q_lu(assembler &as, freg5 frd, ireg5 rs1, arg3 rm);
	bool asm_fmv_x_q(assembler &as, ireg5 rd, freg5 frs1);
	bool asm_fmv_q_x(assembler &as, freg5 frd, ireg5 rs1);
}

#endif
